empty(variableReference)
getpriority
setpriority(p : nat)
simutime
Config.Display(displayCode : int)
Config.Lang(langCode : int)
Config.Machine(machineCode : int)
Dir.Change(directoryPathName : string)
Dir.Close(streamNumber : int)
Dir.Create(directoryPathName : string)
Dir.Current
Dir.Delete(directoryPathName : string)
Dir.Exists(directoryPathName : string)
Dir.Get(streamNumber : int)
Dir.GetLong(streamNumber : int, var entryName : string, var size, attribute, fileTime : int)
Dir.Open(directoryPathName : string)
Draw.Arc(x, y, xRadius, yRadius : int, initialAngle, finalAngle, Color : int)
Draw.Box(x1, y1, x2, y2, Color : int)
Draw.Cls
Draw.Dot(x, y, Color : int)
Draw.DashedLine(x1, y1, x2, y2 : int, style, colourNum : int)
Draw.Fill(x, y : int, fillColor, borderColor : int)
Draw.FillArc(x, y, xRadius, yRadius : int, initialAngle, finalAngle, Color : int)
Draw.FillBox(x1, y1, x2, y2, Color : int)
Draw.FillMapleLeaf(x1, y1, x2, y2, Color : int)
Draw.FillOval(x, y, xRadius, yRadius, Color : int)
Draw.FillPolygon(x, y  : array 1 .. * of int, n : int, Color : int)
Draw.FillStar(x1, y1, x2, y2, Color : int)
Draw.Line(x1, y1, x2, y2, Color : int)
Draw.MapleLeaf(x1, y1, x2, y2, Color : int)
Draw.Oval(x, y, xRadius, yRadius, Color : int)
Draw.Polygon(x, y  : array 1 .. * of int, n : int, Color : int)
Draw.Star(x1, y1, x2, y2, Color : int)
Draw.Text(msg : string, x, y, font, Color : int)
Draw.ThickLine(x1, y1, x2, y2 : int, width, colourNum : int)
File.Copy(srcPathName, destPathName : string)
File.Delete(filePathName : string)
File.DiskFree(pathName : string)
File.Exists(pathName : string)
File.FullPath(pathName : string)
File.Parent(pathName : string)
File.Rename(srcPathName, destName : string)
File.Status(pathName : string, var size, attribute, fileTime : int)
Font.Draw(txtStr : string, x, y, fontID, Color : int)
Font.Free(fontID : int)
Font.GetName
Font.GetSize
Font.GetStyle(fontName : string, var bold, italic, underline : boolean)
Font.Name(fontID : int)
Font.New(fontSelectStr : string)
Font.Sizes(fontID : int, var height, ascent, descent, internalLeading : int)
Font.StartName
Font.StartSize(fontName, fontStyle : string)
Font.Width(txtStr : string, fontID : int)
GUI.AddLine(widgetID : int, text : string)
GUI.AddText(widgetID : int, text : string)
GUI.ClearText(widgetID : int)
GUI.CloseWindow(window : int)
GUI.CreateButton(x, y, width : int, text : string, actionProc : procedure x ())
GUI.CreateButtonFull(x, y, width : int, text : string, actionProc : procedure x (), height : int, shortcut : char, default : boolean)
GUI.CreateCanvas(x, y, width, height : int)
GUI.CreateCanvasFull(x, y, width, height : int, border : int, mouseDown : procedure x (mx, my : int), mouseDrag : procedure x (mx, my : int), mouseUp : procedure x (mx, my : int))
GUI.CreateCheckBox(x, y : int, text : string, actionProc : procedure x (filled : boolean))
GUI.CreateFrame(x1, y1, x2, y2, kind : int)
GUI.CreateHorizontalScrollBar(x, y, size : int, min, max, start : int, actionProc : procedure x (value : int))
GUI.CreateHorizontalScrollBarFull(x, y, size : int, min, max, start : int, actionProc : procedure x (value : int), arrowInc, pageInc, thumbSize : int)
GUI.CreateHorizontalSlider(x, y, length : int, min, max, start : int, actionProc : procedure x (value : int))
GUI.CreateLabel(x, y : int, text : string)
GUI.CreateLabelFull(x, y : int, text : string, width, height, alignment, fontID : int)
GUI.CreateLabelledFrame(x1, y1, x2, y2, kind : int, text : string)
GUI.CreateLine(x1, y1, x2, y2, kind : int)
GUI.CreateMenu(name : string)
GUI.CreateMenuItem(name : string, actionProc : procedure x ())
GUI.CreateMenuItemFull(name : string, actionProc : procedure x (), shortCut : char, addNow : boolean)
GUI.CreatePicture(x, y, picture : int, mergePic : boolean)
GUI.CreatePictureButton(x, y, picture : int, actionProc : procedure x ())
GUI.CreatePictureButtonFull(x, y, picture : int, actionProc : procedure x (), width, height : int, shortcut : char, mergePic : boolean)
GUI.CreatePictureRadioButton(x, y, picture : int, joinID : int, actionProc : procedure x ())
GUI.CreatePictureRadioButtonFull(x, y, picture : int, joinID : int, actionProc : procedure x (), width, height : int, shortcut : char, mergePic : boolean)
GUI.CreateRadioButton(x, y : int, text : string, joinID : int, actionProc : procedure x ())
GUI.CreateRadioButtonFull(x, y : int, text : string, joinID : int, actionProc : procedure x (), alignment : int, shortCut : char)
GUI.CreateTextBox(x, y, width, height : int)
GUI.CreateTextBoxFull(x, y, width, height : int, border, fontID : int)
GUI.CreateTextField(x, y, width : int, text : string, actionProc : procedure x (text : string))
GUI.CreateTextFieldFull(x, y, width : int, text : string, actionProc : procedure x (text : string), border, fontID, inputKind : int)
GUI.CreateVerticalScrollBar(x, y, size : int, min, max, start : int, actionProc : procedure x (value : int))
GUI.CreateVerticalScrollBarFull(x, y, size : int, min, max, start : int, actionProc : procedure x (value : int), arrowInc, pageInc, thumbSize : int)
GUI.CreateVerticalSlider(x, y, length : int, min, max, start : int, actionProc : procedure x (value : int))
GUI.Disable(widgetID : int)
GUI.Dispose(widgetID : int)
GUI.Enable(widgetID : int)
GUI.FontDraw(widgetID : int, textStr : string, x, y, fontID, Color : int)
GUI.GetCheckBox(widgetID : int)
GUI.GetEventTime
GUI.GetEventWidgetID
GUI.GetEventWindow
GUI.GetHeight(widgetID : int)
GUI.GetMenuBarHeight
GUI.GetScrollBarWidth
GUI.GetSliderValue(widgetID : int)
GUI.GetText(widgetID : int)
GUI.GetVersion
GUI.GetWidth(widgetID : int)
GUI.GetX(widgetID : int)
GUI.GetY(widgetID : int)
GUI.Hide(widgetID : int)
GUI.HideMenuBar
GUI.ProcessEvent
GUI.Quit
GUI.Refresh
GUI.SelectRadio(widgetID : int)
GUI.SetActive(widgetID : int)
GUI.SetBackgroundColor(Color : int)
GUI.SetBackgroundColour(Color : int)
GUI.SetCheckBox(widgetID : int, status : boolean)
GUI.SetDefault(widgetID : int, default : boolean)
GUI.SetDisplayWhenCreated(display : boolean)
GUI.SetKeyEventHandler(keyEventHandler : procedure x (ch : char))
GUI.SetLabel(widgetID : int, text : string)
GUI.SetMouseEventHandler(mouseEventHandler : procedure x (mx, my : int))
GUI.SetNullEventHandler(nullHandler : procedure x ())
GUI.SetPosition(widgetID, x, y : int)
GUI.SetPositionAndSize(widgetID, x, y : int, width, height : int)
GUI.SetScrollAmount(widgetID : int, arrowInc, pageInc, thumbSize : int)
GUI.SetSelection(widgetID, fromSel, toSel : int)
GUI.SetSize(widgetID, width, height : int)
GUI.SetSliderMinMax(widgetID, min, max : int)
GUI.SetSliderReverse(widgetID : int)
GUI.SetSliderSize(widgetID, length : int)
GUI.SetSliderValue(widgetID, value : int)
GUI.SetText(widgetID : int, text : string)
GUI.SetXOR(widgetID : int, xor : boolean)
GUI.Show(widgetID : int)
GUI.ShowMenuBar
Input.Flush
Input.KeyDown(var chars : array char of boolean)
Input.Pause
getch(var ch : string (1))
getchar
hasch
Joystick.GetInfo(joystick : int, var xPos, yPos : int, btn1Pressed, btn2Pressed : boolean)
Math.Distance(x1, y1, x2, y2 : real)
Math.E
Math.PI
Mouse.ButtonChoose(choice : string)
Mouse.ButtonMoved(motion : string)
Mouse.ButtonWait(motion : string, var x, y, buttonNumber, buttonUpDown : int)
Mouse.Hide
Mouse.Show
Mouse.Where(var x, y, button : int)
Music.Play(music : string)
Music.PlayFile(fileName : string)
Music.PlayFileLoop(fileName : string)
Music.PlayFileReturn(fileName : string)
Music.PlayFileStop()
Music.Sound(frequency, duration : int)
Music.SoundOff()
Net.BytesAvailable(netStream : int)
Net.CharAvailable(netStream : int)
Net.CloseConnection(netStream : int)
Net.HostAddressFromName(hostName : string)
Net.HostNameFromAddress(hostAddr : string)
Net.LineAvailable(netStream : int)
Net.LocalAddress
Net.LocalName
Net.OpenConnection(netAddr : string, port : int)
Net.OpenURLConnection(urlAddr : string)
Net.TokenAvailable(netStream : int)
Net.WaitForConnection(port : int, var netAddr : string)
PC.ParallelGet(port : int)
PC.ParallelPut(port : int, value : int)
Pic.Blend(picID1, picID2, percent : int)
Pic.Blur(picId, blurFactor : int)
Pic.Draw(picID, x, y, mode : int)
Pic.DrawFrames(picIDs : array 1 .. * of int, x, y, mode : int, numFrames, delayBetweenFrames : int, eraseAfter : boolean)
Pic.DrawFramesBack(picIDs : array 1 .. * of int, x, y, mode : int, numFrames, delayBetweenFrames : int, eraseAfter : boolean)
Pic.DrawSpecial(picID, x, y, mode, transition, duration : int)
Pic.DrawSpecialBack(picID, x, y, mode, transition, duration : int)
Pic.FileNew(fileName : string)
Pic.FileNewFrames(fileName : string, var picIDs : array 1 .. * of int, var delayTime : int)
Pic.Flip(picID : int)
Pic.Free(picID : int)
Pic.Height(picID : int)
Pic.Mirror(picID : int)
Pic.New(x1, y1, x2, y2 : int)
Pic.Rotate(picID, angle, x, y : int)
Pic.Save(picID : int, fileName : string)
Pic.Scale(picID, newWidth, newHeight : int)
Pic.ScreenLoad(fileName : string, x, y, mode : int)
Pic.ScreenSave(x1, y1, x2, y2 : int, fileName : string)
Pic.Width(picID : int)
RGB.AddColor(redComp, greenComp, blueComp : real)
RGB.AddColour(redComp, greenComp, blueComp : real)
RGB.GetColor(colorNumber : int, var redComp, greenComp, blueComp : real)
RGB.GetColour(colorNumber : int, var redComp, greenComp, blueComp : real)
RGB.SetColor(colorNumber: int, redComp, greenComp, blueComp : real)
RGB.SetColour(colorNumber: int, redComp, greenComp, blueComp : real)
maxcolor
maxcolour
Rand.Int(low, high : int)
Rand.Next(var v : real, seq : 1 .. 10)
Rand.Real
Rand.Reset
Rand.Seed(seed : int, seq : 1 .. 10)
Rand.Set(seed : nat4)
Sprite.Animate(spriteID, picID, x, y : int, centered : boolean)
Sprite.ChangePic(spriteID, picID : int)
Sprite.Free(spriteID : int)
Sprite.Hide(spriteID : int)
Sprite.New(picID : int)
Sprite.SetFrameRate(framesPerSecond : int)
Sprite.SetHeight(spriteID, newHeight : int)
Sprite.SetPosition(spriteID, x, y : int, centered : boolean)
Sprite.Show(spriteID : int)
Str.Lower(s : string)
Str.Trim(s : string)
Str.Upper(s : string)
Sys.Exec(command : string)
Sys.FetchArg(i : int)
Sys.GetComputerName
Sys.GetEnv(symbol : string)
Sys.GetPid
Sys.GetUserName
Sys.Nargs
Text.Cls
Text.Color(Color : int)
Text.ColorBack(Color : int)
Text.Colour(Color : int)
Text.ColourBack(Color : int)
Text.Locate(row, column : int)
Text.LocateXY(x , y : int)
Text.WhatCol
Text.WhatColor
Text.WhatColorBack
Text.WhatColour
Text.WhatColourBack
Text.WhatRow
maxcol
maxrow
Time.Date
Time.DateSec(dateString : string)
Time.Delay(duration : int)
Time.DelaySinceLast(duration : int)
Time.Elapsed()
Time.ElapsedCPU
Time.PartsSec(year, month, day, hour, minute, second : int)
Time.Sec()
Time.SecDate(timeInSecs : int)
Time.SecParts(sec : int, var year, month, day, dayOfWeek, hour, minute, second : int)
Time.SecStr(timeInSecs : int, formatString : string)
View.ClipAdd(x1, y1, x2, y2 : int)
View.ClipAddOval(x, y, xRadius, yRadius : int)
View.ClipOff
View.ClipSet(x1, y1, x2, y2 : int)
View.Set(s : string)
View.SetTransparentColor(colorNumber : int)
View.SetTransparentColour(colourNumber : int)
View.Update
View.UpdateArea(x1, y1, x2, y2 : int)
View.WhatDotColor(x, y : int)
View.WhatDotColour(x, y : int)
maxcolor
maxcolor
maxx
maxy
Window.Close(windowID : int)
Window.GetActive
Window.GetPosition(windowID : int, var x, y : int)
Window.GetSelect
Window.Hide(windowID : int)
Window.Open(setUpString : string)
Window.Select(windowID : int)
Window.Set(windowID : int, setUpString : string)
Window.SetActive(windowID)
Window.SetPosition(windowID : int, x, y : int)
Window.Show(windowID : int)
Window.Update(windowID : int)
Window.UpdateArea(windowID : int, x1, y1, x2, y2 : int)
abs(r : real)
addr(reference)
setTypeName(all)
arccos(r : real)
arccosd(r : real)
arcsin(r : real)
arcsind(r : real)
arctan(r : real)
arctand(r : real)
bits(expn, subrange)
break
buttonchoose(choice : string)
buttonmoved(motion : string)
buttonwait(motion : string, var x, y, buttonnumber, buttonupdown : int)
ceil(r : real)
chr(i : int)
clock(var c : int)
close
cls()
color(Color : int)
colorback(Color : int)
colour(Color : int)
colourback(Color : int)
cos(r : real)
cosd(r : real)
date(var d : string)
delay(duration : int)
div
drawarc(x, y, xRadius, yRadius : int, initialAngle, finalAngle, Color : int)
drawbox(x1, y1, x2, y2, Color : int)
drawdot(x, y, Color : int)
drawfill(x, y : int, fillColor, borderColor : int)
drawfillarc(x, y, xRadius, yRadius : int, initialAngle, finalAngle, Color : int)
drawfillbox(x1, y1, x2, y2, Color : int)
drawfillmapleleaf(x1, y1, x2, y2, Color : int)
drawfilloval(x, y, xRadius, yRadius, Color : int)
drawfillpolygon(x, y  : array 1 .. * of int, n : int, Color : int)
drawfillstar(x1, y1, x2, y2, Color : int)
drawline(x1, y1, x2, y2, Color : int)
drawmapleleaf(x1, y1, x2, y2, Color : int)
drawoval(x, y, xRadius, yRadius, Color : int)
drawpic(x, y : int, buffer : array 1 .. * of int, picmode : int)
drawpolygon(x, y : array 1 .. * of int, n : int, Color : int)
drawstar(x1, y1, x2, y2, Color : int)
empty(variableReference)
enum(id { , id })
exit
exp(r : real)
false
fetcharg(i : int)
floor(r : real)
frealstr(r : real, width, fractionWidth : int)
getch(var ch : string (1))
getchar
getenv(symbol : string)
getpid
getpriority
hasch
in
index(s , patt : string)
intreal(i : int)
intstr(i : int)
length(s : string)
ln(r : real)
locate(row, column : int)
locatexy(x , y : int)
lower(reference)
max(expn , expn)
maxcol
maxcolor
maxcolour
maxint
maxnat
maxrow
maxx
maxy
min(expn , expn)
minint
minnat
mousehide
mouseshow
mousewhere(var x, y, button : int)
nargs
natreal(n : nat)
natstr(n : nat [ , width : int [, base : int ] ])
not
objectclass(pointerExpn)
ord(ch : char)
parallelget
parallelput(p : int)
play(music : string)
playdone
pred(expn)
rand(var r : real)
randint(var i : int, low, high : int)
randnext(var v : real, seq : 1 .. 10)
randomize
randseed(seed : int, seq : 1 .. 10)
realstr(r : real, width : int)
repeat(s : string, i : int)
return
round(r : real)
self
setpriority(p : nat)
setscreen(s : string)
sign(r : real)
simutime
sin(r : real)
sind(r : real)
sizeof(typeNameOrVariableReference)
sizepic(x1, y1, x2, y2 : int)
skip
skip
sound(frequency, duration : int)
sqrt(r : real)
strint(s : string)
strintok(s : string)
strnat(s : string)
strnatok(s : string)
strreal(s : string)
strrealok(s : string)
succ(expn)
sysclock(var c : int)
system(command : string, var ret : int)
takepic(x1, y1, x2, y2 : int, var buffer : array 1 .. * of int)
tan(r : real)
tand(r : real)
time(var t : string)
true
upper(reference [ , dimension ])
wallclock(var c : int)
whatcol
whatcolor
whatcolorback
whatcolour
whatcolourback
whatdotcolor(x, y : int)
whatdotcolour(x, y : int)
whatrow